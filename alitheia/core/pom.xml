<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <artifactId>alitheia</artifactId>
    <groupId>eu.sqooss</groupId>
    <version>0.95-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>eu.sqooss.alitheia</groupId>
  <artifactId>core</artifactId>
  <name>Alitheia Core</name>

  <packaging>bundle</packaging>

  <version>0.95-SNAPSHOT</version>
  <build>
    <!--<resources>
      <resource>
        <targetPath>eu/sqooss/service/db</targetPath>
        <directory>${basedir}/src/main/java/eu/sqooss/service/db/</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
    </resources>-->
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.2.0</version>
	<extensions>true</extensions>
        <configuration>
          <instructions>
            <Embed-Dependency> 
              *;scope=compile|runtime;artifactId=!core|org.osgi.core|org.osgi.compendium|servlet-api|junit
            </Embed-Dependency>
            <Export-Package>
              eu.sqooss.core, eu.sqooss.service.*,
              com.mws.squal.service.*
            </Export-Package>
            <Import-Package>
              com.mysql.jdbc;resolution:=optional, org.h2;resolution:=optional, 
              javassist.util, javassist.util.proxy,
              org.hibernate, org.hibernate.cfg, org.hibernate.classic, org.hibernate.exception,
              org.hibernate.proxy, org.hibernate.type, org.hibernate.connection,
              org.hibernate.cache, org.hsqldb;resolution:=optional, 
              com.sun.source.*;resolution:=optional, *;resolution:=optional
            </Import-Package>
            <Bundle-Activator>eu.sqooss.core.CoreActivator</Bundle-Activator>
            <Bundle-SymbolicName>eu.sqooss.alitheia.core</Bundle-SymbolicName>
            <Bundle-Version>1.0</Bundle-Version>
            <Bundle-Vendor>Athens University Of Economics and Business</Bundle-Vendor>
            <Bundle-Description>The Alitheia Core Platform</Bundle-Description>
            <Eclipse-RegisterBuddy>org.hibernate.core, org.apache.velocity</Eclipse-RegisterBuddy>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.2.201409121644</version>
        <executions>
        <!--
            Prepares the property pointing to the JaCoCo runtime agent which
            is passed as VM argument when Maven the Surefire plugin is executed.
        -->
        <execution>
            <id>pre-unit-test</id>
            <goals>
                <goal>prepare-agent</goal>
            </goals>
            <configuration>
                <!-- Sets the path to the file which contains the execution data. -->
                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                <!--
                    Sets the name of the property containing the settings
                    for JaCoCo runtime agent.
                -->
                <propertyName>surefireArgLine</propertyName>
            </configuration>
        </execution>
        <!--
            Ensures that the code coverage report for unit tests is created after
            unit tests have been run.
        -->
        <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
                <goal>report</goal>
            </goals>
            <configuration>
                <!-- Sets the path to the file which contains the execution data. -->
                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
        </execution>
    </executions>
      </plugin>
    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>org.jacoco</groupId>
    								<artifactId>
    									jacoco-maven-plugin
    								</artifactId>
    								<versionRange>
    									[0.7.2.201409121644,)
    								</versionRange>
    								<goals>
    									<goal>prepare-agent</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>

  <dependencies>
    <dependency>
	  <groupId>com.h2database</groupId>
	  <artifactId>h2</artifactId>
	  <version>1.3.176</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>4.2.0</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
      <version>4.2.0</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.6</version>
      <scope>provided</scope>
    </dependency>
	 <dependency>
	    <groupId>org.powermock</groupId>
	    <artifactId>powermock-module-junit4</artifactId>
	    <version>1.5.2</version>
	    <scope>test</scope>
	 </dependency>
	 <dependency>
	    <groupId>org.powermock</groupId>
	    <artifactId>powermock-api-mockito</artifactId>
	    <version>1.5.2</version>
	    <scope>test</scope>
	 </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <version>3.5.1-Final</version>
    </dependency>
        <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>1.2.1.GA</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
      <version>1.2.GA</version>
   </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jettison-provider</artifactId>
      <version>1.2.GA</version>
   </dependency>
    <dependency>
      <groupId>org.scannotation</groupId>
      <artifactId>scannotation</artifactId>
      <version>1.0.2</version>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>jsr311-api</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.6.1</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>1.2</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.mockito</groupId>
    	<artifactId>mockito-core</artifactId>
    	<version>1.9.5</version>
    	<scope>test</scope>
    </dependency>
  </dependencies>
    
  <profiles>
    <profile>
      <id>tools.jar</id>
      <activation>
        <property>
          <name>java.vendor</name>
          <value>Sun Microsystems Inc.</value>
       </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.sun</groupId>
          <artifactId>tools</artifactId>
          <version>1.6</version>
          <scope>system</scope>
          <optional>true</optional>
          <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
